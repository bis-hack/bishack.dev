version: 2.1
orbs:
  codecov: codecov/codecov@1.0.2
jobs:
  test:
    docker:
      - image: circleci/golang:1.12
    working_directory: ~/bishack.dev
    environment:
      TEST_DIR: /tmp/tests
    steps:
      - checkout
      - run: mkdir -p $TEST_DIR
      - restore_cache:
          keys:
            - v1-pkg-cache
      - run: curl -sf https://up.apex.sh/install | sudo sh && go mod download
      - run: make test
      - run: mv coverage.txt /tmp/tests/coverage.txt
      - codecov/upload:
          file: /tmp/tests/coverage.txt
      - store_artifacts:
          path: /tmp/tests
          destination: out
      - store_test_results:
          path: /tmp/tests
  deploy-stage:
    docker:
      - image: circleci/golang:1.12
    working_directory: ~/bishack.dev
    steps:
      - run: |
          SLACK_TOKEN=$SLACK_TOKEN \
          SESSION_KEY=$SESSION_KEY \
          CSRF_KEY=$CSRF_KEY \
          COGNITO_CLIENT_ID=$COGNITO_CLIENT_ID \
          COGNITO_CLIENT_SECRET=$COGNITO_CLIENT_SECRET \
          GITHUB_CLIENT_ID=$GITHUB_CLIENT_ID \
          GITHUB_CLIENT_SECRET=$GITHUB_CLIENT_SECRET \
          make deploy
  deploy-prod:
    docker:
      - image: circleci/golang:1.12
    working_directory: ~/bishack.dev
    steps:
      - run: |
          SLACK_TOKEN=$SLACK_TOKEN \
          SESSION_KEY=$SESSION_KEY \
          CSRF_KEY=$CSRF_KEY \
          COGNITO_CLIENT_ID=$COGNITO_CLIENT_ID_PROD \
          COGNITO_CLIENT_SECRET=$COGNITO_CLIENT_SECRET_PROD \
          GITHUB_CLIENT_ID=$GITHUB_CLIENT_ID_PROD \
          GITHUB_CLIENT_SECRET=$GITHUB_CLIENT_SECRET_PROD \
          GITHUB_CALLBACK=$GITHUB_CALLBACK_PROD \
          make deploy.prod
workflows:
  version: 2.1
  build-deploy:
    jobs:
      - test
      - deploy-stage:
          requires:
            - test
          filters:
            branches:
              only: master
      - deploy-prod:
          requires:
            - test
          filters:
            branches:
              only: production
